// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  username  String
  notes     Note[]   @relation("UserNotes")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  iv        String   @default("")
  tag       String   @default("")
}

model Note {
  id        String    @id @default(uuid())
  title     String
  color     String
  userId    String
  user      User      @relation("UserNotes", fields: [userId], references: [id], onDelete: Cascade)
  sections  Section[] @relation("NoteSections")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Section {
  id        String   @id @default(uuid())
  title     String
  color     String
  noteId    String
  note      Note     @relation("NoteSections", fields: [noteId], references: [id], onDelete: Cascade)
  pages     Page[]   @relation("SectionPages")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id        String   @id @default(uuid())
  title     String
  content   String
  sectionId String
  section   Section  @relation("SectionPages", fields: [sectionId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recent {
  id        String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
